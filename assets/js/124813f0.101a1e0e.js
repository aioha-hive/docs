"use strict";(self.webpackChunkaioha_docs=self.webpackChunkaioha_docs||[]).push([[572],{2254:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"core/wax","title":"Wax Signer","description":"Aioha may be used to sign transactions on Wax Typescript library.","source":"@site/docs/core/wax.mdx","sourceDirName":"core","slug":"/core/wax","permalink":"/docs/core/wax","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/core/wax.mdx","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Custom Provider","permalink":"/docs/core/custom-provider"},"next":{"title":"JSON-RPC Interface","permalink":"/docs/core/jsonrpc"}}');var r=t(3420),i=t(5404);const o={sidebar_position:4},s="Wax Signer",c={},h=[{value:"Usage",id:"usage",level:2},{value:"Caveats",id:"caveats",level:2}];function d(e){const a={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.header,{children:(0,r.jsx)(a.h1,{id:"wax-signer",children:"Wax Signer"})}),"\n",(0,r.jsxs)(a.p,{children:["Aioha may be used to sign transactions on ",(0,r.jsx)(a.a,{href:"https://gitlab.syncad.com/hive/wax/-/tree/develop/ts?ref_type=heads",children:"Wax Typescript"})," library."]}),"\n",(0,r.jsx)(a.admonition,{type:"note",children:(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.em,{children:(0,r.jsx)(a.strong,{children:"Wax"})})," here refers to the feature-rich multi-language ",(0,r.jsx)(a.a,{href:"https://gitlab.syncad.com/hive/wax",children:"library"})," for ",(0,r.jsx)(a.a,{href:"https://hive.io",children:"Hive"}),". Not to be confused with the competing blockchain forked from EOS."]})}),"\n",(0,r.jsx)(a.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-js",children:"import { createHiveChain } from '@hiveio/wax'\nimport { initAioha, WaxAiohaSigner } from '@aioha/aioha'\n\nconst aioha = initAioha()\nconst chain = await createHiveChain()\nconst tx = await chain.createTransaction()\n\n// push some operations here...\n\nawait tx.sign(WaxAiohaSigner.for(aioha, 'active'))\nawait chain.broadcast(tx)\n"})}),"\n",(0,r.jsx)(a.h2,{id:"caveats",children:"Caveats"}),"\n",(0,r.jsx)(a.p,{children:"Currently most if not all providers produce signatures using the legacy serialization method, while Wax prefers the newer method supported as of HF26 which saves 4 bytes per asset/NAI value in the transaction."}),"\n",(0,r.jsxs)(a.p,{children:["In addition, Aioha primarily uses the legacy transaction JSON format (array tuple of ",(0,r.jsx)(a.code,{children:'["operation_name", {...body}]'}),") while Wax primarily uses the newer JSON format of ",(0,r.jsx)(a.code,{children:'{"type": "operation_name", value: {...body}}'}),"."]}),"\n",(0,r.jsx)(a.p,{children:"We plan to address them in the next major breaking release of Aioha."})]})}function l(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},5404:(e,a,t)=>{t.d(a,{R:()=>o,x:()=>s});var n=t(6672);const r={},i=n.createContext(r);function o(e){const a=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function s(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(i.Provider,{value:a},e.children)}}}]);