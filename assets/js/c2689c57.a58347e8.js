"use strict";(self.webpackChunkaioha_docs=self.webpackChunkaioha_docs||[]).push([[690],{5155:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var r=n(9729);const o={},i=r.createContext(o);function s(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:t},e.children)}},5630:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"framework/lit","title":"Lit","description":"Lit provider for Aioha that uses Lit\'s context to provide reactive states in your Lit Element components.","source":"@site/docs/framework/lit.mdx","sourceDirName":"framework","slug":"/framework/lit","permalink":"/docs/framework/lit","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/framework/lit.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Lit"},"sidebar":"tutorialSidebar","previous":{"title":"Framework Libraries","permalink":"/docs/framework"},"next":{"title":"React","permalink":"/docs/framework/react"}}');var o=n(5813),i=n(5155);const s={sidebar_position:2,title:"Lit"},a="Lit Provider",l={},c=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Using Events",id:"using-events",level:2}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"lit-provider",children:"Lit Provider"})}),"\n",(0,o.jsxs)(t.p,{children:["Lit provider for Aioha that uses Lit's ",(0,o.jsx)(t.a,{href:"https://lit.dev/docs/data/context",children:"context"})," to provide reactive states in your Lit Element components."]}),"\n",(0,o.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-sh",children:"pnpm i @aioha/providers @aioha/aioha\n"})}),"\n",(0,o.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["Initialize Aioha and setup provider at the root of your application. This is usually done at the entrypoint file (i.e. ",(0,o.jsx)(t.code,{children:"index.ts"})," or ",(0,o.jsx)(t.code,{children:"my-element.ts"}),")."]}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",metastring:'title="src/my-element.ts"',children:"import { LitElement, html } from 'lit'\nimport { customElement } from 'lit/decorators.js'\nimport { Aioha } from '@aioha/aioha'\nimport '@aioha/providers/lit'\n\n@customElement('my-element')\nexport class MyElement extends LitElement {\n  aioha: Aioha = new Aioha()\n\n  connectedCallback() {\n    super.connectedCallback()\n\n    // See options: https://aioha.dev/docs/core/usage#instantiation\n    this.aioha.setup()\n  }\n\n  render() {\n    return html`\n      <aioha-provider .aioha=${this.aioha}>\n        <the-rest-of-your-app></the-rest-of-your-app>\n      </aioha-provider>\n    `\n  }\n}\n"})}),"\n",(0,o.jsxs)(t.ol,{start:"2",children:["\n",(0,o.jsxs)(t.li,{children:["Use Aioha anywhere within ",(0,o.jsx)(t.code,{children:"<aioha-provider>"})," through the ",(0,o.jsx)(t.code,{children:"@consume"})," decorator."]}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",metastring:'title="src/components/aioha-page.ts"',children:"import { LitElement, html } from 'lit'\nimport { customElement, state } from 'lit/decorators.js'\nimport { consume } from '@lit/context'\nimport { AiohaCtx, ProviderCtx, UserCtx, OtherUsersCtx } from '@aioha/providers/lit'\nimport type { Aioha, Providers, PersistentLoginProvs } from '@aioha/aioha'\n\n@customElement('aioha-page')\nexport class AiohaPage extends LitElement {\n  @consume({ context: AiohaCtx })\n  @state()\n  private aioha?: Aioha\n\n  @consume({ context: UserCtx, subscribe: true })\n  @state()\n  private _user?: string\n\n  @consume({ context: ProviderCtx, subscribe: true })\n  @state()\n  private _prov?: Providers\n\n  @consume({ context: OtherUsersCtx, subscribe: true })\n  @state()\n  private _otherUsers: PersistentLoginProvs = {}\n\n  render() {\n    return html`\n      <div>\n        <p>User: ${this._user} Provider: ${this._prov}</p>\n        ${Object.keys(this._otherUsers).map((u) => {\n          return html`<p>Other user: ${u} Provider: ${this._otherUsers[u]}</p>`\n        })}\n      </div>\n    `\n  }\n}\n"})}),"\n",(0,o.jsx)(t.h2,{id:"using-events",children:"Using Events"}),"\n",(0,o.jsxs)(t.p,{children:["Listen for ",(0,o.jsx)(t.a,{href:"/docs/core/jsonrpc#events",children:"events"})," using lifecycle callbacks."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",metastring:'title="src/components/some-element.ts"',children:"import { LitElement, html } from 'lit'\nimport { customElement, state } from 'lit/decorators.js'\nimport { consume } from '@lit/context'\nimport { AiohaCtx } from '@aioha/providers/lit'\nimport { Aioha } from '@aioha/aioha'\n\n@customElement('some-element')\nexport class SomeElement extends LitElement {\n  @consume({ context: AiohaCtx })\n  @state()\n  private aioha?: Aioha\n\n  private _handler() {\n    // handle your event here\n  }\n\n  connectedCallback() {\n    super.connectedCallback()\n    this.aioha!.on('sign_tx_request', this._handler)\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback()\n    this.aioha!.off('sign_tx_request', this._handler)\n  }\n\n  render() {\n    return html`<your-element-contents-here></<your-element-contents-here>`\n  }\n}\n"})})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}}}]);